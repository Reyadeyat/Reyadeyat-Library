cmake_minimum_required(VERSION 3.26)
include(./CMakeFunctions.txt)
project(reyadeyat-c C)
#set(PREFIX "")
#set(CMAKE_STATIC_LIBRARY_PREFIX "")
set(CMAKE_SHARED_LIBRARY_PREFIX "")
#set(CMAKE_SHARED_MODULE_PREFIX "")
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_C_STANDARD 23)
message("Parameters MODE = ${MODE} - BUILD = ${BUILD} - PROJECT_PATH = ${PROJECT_PATH}")
if (NOT DEFINED BUILD)
    message("NO BUILD defined, defaulting BUILD to mode DEBUG")
    SET(BUILD "DEBUG")
endif()
if ("${BUILD}" STREQUAL "DEBUG")
    set(CMAKE_BUILD_TYPE Debug)
    set(CMAKE_C_FLAGS "${CFLAGS} -g -Wall -Werror -fPIC -fstack-protector --save-temps")
elseif ("${BUILD}" STREQUAL "RELEASE")
    set(CMAKE_BUILD_TYPE Release)
    set(CMAKE_C_FLAGS "${CFLAGS} -Wall -Werror -fPIC -O2 -fstack-protector --save-temps")
endif()
message("CFLAGS ${CMAKE_C_FLAGS}")

message("Defined User MODE is ${MODE}")
if (NOT DEFINED MODE)
    message("NO MODE defined, defaulting MODE to mode INCLUDE")
    #SET(MODE "LIBRARY")
    SET(MODE "INCLUDE")
endif()
if ("${MODE}" STREQUAL "LIBRARY")
    message("MODE is: LIBRARY")
    add_compile_definitions(MODE=1)
    #Copy Include Directory Header Files from Reyadeyat-Modules WITHOUT version headers
    set(LIB_SOURCE_DIRECTORY "../Reyadeyat-Modules/src")
    set(INCLUDE_DIRECTORY "./include")
    INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORY})
    COPY_FILE_LIST_FROM_TO("/reyadeyat/*.h" ${LIB_SOURCE_DIRECTORY} ${INCLUDE_DIRECTORY} false)
    COPY_FILE_LIST_FROM_TO("/reyadeyat/memory/*.h" ${LIB_SOURCE_DIRECTORY} ${INCLUDE_DIRECTORY} false)
    LINK_DIRECTORIES("./lib")
    set(SOURCE_DIRECTORY "./src")
    file(GLOB_RECURSE SOURCE_FILE_LIST "${SOURCE_DIRECTORY}/*.c" "${INCLUDE_DIRECTORY}/*.c")
    ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_FILE_LIST} ${SOURCE_DIRECTORY})
elseif("${MODE}" STREQUAL "INCLUDE")
    message("MODE is: INCLUDE")
    add_compile_definitions(MODE=2)
    #Copy Include Directory Header Files from Reyadeyat-Modules WITH version headers
    #set(LIB_SOURCE_DIRECTORY "../Reyadeyat-Modules/src")
    #set(INCLUDE_DIRECTORY "./include")
    #COPY_FILE_LIST_FROM_TO("/reyadeyat/*.c" ${LIB_SOURCE_DIRECTORY} ${INCLUDE_DIRECTORY} true)
    #COPY_FILE_LIST_FROM_TO("/reyadeyat/*.h" ${LIB_SOURCE_DIRECTORY} ${INCLUDE_DIRECTORY} true)
    set(SOURCE_DIRECTORY "./src")
    set(INCLUDE_DIRECTORY "../Reyadeyat-Modules/src")
    file(GLOB_RECURSE SOURCE_FILE_LIST "${SOURCE_DIRECTORY}/*" "${INCLUDE_DIRECTORY}/*")
    INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORY})
    ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_FILE_LIST} ${INCLUDE_FILE_LIST})
endif()

#file(MAKE_DIRECTORY "./lib")
#set(SOURCE_DIRECTORY "./src")
#file(GLOB_RECURSE SOURCE_FILE_LIST "${SOURCE_DIRECTORY}/*.c" "${INCLUDE_DIRECTORY}/*.c")
#message("source files in dir: ${SOURCE_DIRECTORY}")
#foreach(SOURCE_FILE IN LISTS SOURCE_FILE_LIST)
#    message("source file: ${SOURCE_FILE}")
#endforeach()
#COPY_FILE_LIST_FROM_TO("/*.so" "../Reyadeyat-Modules/lib" "./lib" false)

#ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_FILE_LIST} ${SOURCE_DIRECTORY})

set_target_properties(${PROJECT_NAME} PROPERTIES LINKER_LANGUAGE C)

install(TARGETS ${PROJECT_NAME} RUNTIME DESTINATION bin COMPONENT Binaries)

